{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testSetup",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060408190526000805462ff00ff1916620100011790556100209061006f565b604051809103906000f08015801561003c573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b039290921691909117905534801561006957600080fd5b5061007c565b6107ae80610b8183390190565b610af68061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a76846314610071578063ba414fa6146100a9578063bca86986146100c1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b16101e3565b60405190151581526020016100a0565b61006f61030e565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b6008546040805163e0bdf58360e01b8152600481019190915260096044820152687372632f746573742f60b81b60648201526080602482015260056084820152642a37b5b2b760d91b60a48201526001600160a01b039091169063e0bdf5839060c4016020604051808303816000875af115801561016b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018f91906107fc565b600980546001600160a01b0319166001600160a01b03929092169182179055604080518082019091526013815272030b2323932b9b9903337b9103a37b5b2b71d1606d1b60208201526101e191610455565b565b60008054610100900460ff16156102035750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103095760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610291917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161085c565b60408051601f19818403018152908290526102ab9161088d565b6000604051808303816000865af19150503d80600081146102e8576040519150601f19603f3d011682016040523d82523d6000602084013e6102ed565b606091505b509150508080602001905181019061030591906108a9565b9150505b919050565b600954610325906001600160a01b0316600061049e565b600954604080516306fdde0360e01b815290516103c0926001600160a01b0316916306fdde039160048083019260009291908290030181865afa158015610370573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039891908101906108e1565b6040518060400160405280600a8152602001692a32b9ba102a37b5b2b760b11b8152506105a2565b600954604080516395d89b4160e01b815290516101e1926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801561040b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261043391908101906108e1565b60405180604001604052806004815260200163151154d560e21b8152506105a2565b61049a828260405160240161046b9291906109ba565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526106cf565b5050565b806001600160a01b0316826001600160a01b03160361049a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105249060208082526025908201527f4572726f723a206120213d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161055b91906109e4565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516105929190610a28565b60405180910390a161049a6106f0565b806040516020016105b3919061088d565b60405160208183030381529060405280519060200120826040516020016105da919061088d565b604051602081830303815290604052805190602001201461049a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516106619060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516106989190610a52565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516105929190610a96565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107eb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261078a929160200161085c565b60408051601f19818403018152908290526107a49161088d565b6000604051808303816000865af19150503d80600081146107e1576040519150601f19603f3d011682016040523d82523d6000602084013e6107e6565b606091505b505050505b6000805461ff001916610100179055565b60006020828403121561080e57600080fd5b81516001600160a01b038116811461082557600080fd5b9392505050565b60005b8381101561084757818101518382015260200161082f565b83811115610856576000848401525b50505050565b6001600160e01b031983168152815160009061087f81600485016020870161082c565b919091016004019392505050565b6000825161089f81846020870161082c565b9190910192915050565b6000602082840312156108bb57600080fd5b8151801515811461082557600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602082840312156108f357600080fd5b815167ffffffffffffffff8082111561090b57600080fd5b818401915084601f83011261091f57600080fd5b815181811115610931576109316108cb565b604051601f8201601f19908116603f01168101908382118183101715610959576109596108cb565b8160405282815287602084870101111561097257600080fd5b61098383602083016020880161082c565b979650505050505050565b600081518084526109a681602086016020860161082c565b601f01601f19169290920160200192915050565b6040815260006109cd604083018561098e565b905060018060a01b03831660208301529392505050565b604081526000610a0e60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000610a0e60408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000610a7c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152610a8e818561098e565b949350505050565b604081526000610a7c60408301600a815269080808081058dd1d585b60b21b60208201526040019056fea26469706673582212202b7eefbea70e5ebcbb973238d57a3797a40496671b583122bfa1dbfbbf4279c764736f6c634300080f00336080604052600080546001600160a01b031916737109709ecfa91a80626ff3989d68f67f5b1dd12d17905534801561003657600080fd5b50610768806100466000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063e0bdf5831461003b578063ee0e6fd31461006a575b600080fd5b61004e61004936600461043e565b61007d565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100783660046104a2565b6101ea565b60408051600280825260608201909252600091829190816020015b6060815260200190600190039081610098579050509050604051806040016040528060058152602001643b3cb832b960d91b815250816000815181106100e0576100e0610558565b602002602001018190525083836040516020016100fe92919061059e565b6040516020818303038152906040528160018151811061012057610120610558565b602090810291909101015260008054604051638916046760e01b81526001600160a01b039091169063891604679061015c9085906004016105db565b6000604051808303816000875af115801561017b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101a39190810190610655565b905060008151602083016000f090506001600160a01b0381166101e15760405162461bcd60e51b81526004016101d8906106c3565b60405180910390fd5b95945050505050565b60408051600280825260608201909252600091829190816020015b6060815260200190600190039081610205579050509050604051806040016040528060058152602001643b3cb832b960d91b8152508160008151811061024d5761024d610558565b6020026020010181905250858560405160200161026b92919061059e565b6040516020818303038152906040528160018151811061028d5761028d610558565b602090810291909101015260008054604051638916046760e01b81526001600160a01b03909116906389160467906102c99085906004016105db565b6000604051808303816000875af11580156102e8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103109190810190610655565b905060008186866040516020016103299392919061070a565b604051602081830303815290604052905060008151602083016000f090506001600160a01b03811661036d5760405162461bcd60e51b81526004016101d8906106c3565b98975050505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156103b8576103b8610379565b604052919050565b600067ffffffffffffffff8211156103da576103da610379565b50601f01601f191660200190565b600082601f8301126103f957600080fd5b813561040c610407826103c0565b61038f565b81815284602083860101111561042157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806040838503121561045157600080fd5b823567ffffffffffffffff8082111561046957600080fd5b610475868387016103e8565b9350602085013591508082111561048b57600080fd5b50610498858286016103e8565b9150509250929050565b600080600080606085870312156104b857600080fd5b843567ffffffffffffffff808211156104d057600080fd5b6104dc888389016103e8565b955060208701359150808211156104f257600080fd5b6104fe888389016103e8565b9450604087013591508082111561051457600080fd5b818701915087601f83011261052857600080fd5b81358181111561053757600080fd5b88602082850101111561054957600080fd5b95989497505060200194505050565b634e487b7160e01b600052603260045260246000fd5b60005b83811015610589578181015183820152602001610571565b83811115610598576000848401525b50505050565b600083516105b081846020880161056e565b8351908301906105c481836020880161056e565b622e767960e81b9101908152600301949350505050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b8281101561064857878503603f1901845281518051808752610629818989018a850161056e565b601f01601f191695909501860194509285019290850190600101610602565b5092979650505050505050565b60006020828403121561066757600080fd5b815167ffffffffffffffff81111561067e57600080fd5b8201601f8101841361068f57600080fd5b805161069d610407826103c0565b8181528560208385010111156106b257600080fd5b6101e182602083016020860161056e565b60208082526027908201527f56797065724465706c6f79657220636f756c64206e6f74206465706c6f7920636040820152661bdb9d1c9858dd60ca1b606082015260800190565b6000845161071c81846020890161056e565b820183858237600093019283525090939250505056fea264697066735822122088fcd3891382b0f42e182475bfd7424e6af9eac508d276e8fc7fbcbc75b600b464736f6c634300080f0033",
    "sourceMap": "272:493:0:-:0;;;;;1572:26:3;;;-1:-1:-1;;165:28:4;;;;;351:19:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;313:57:0;;;-1:-1:-1;;;;;;313:57:0;-1:-1:-1;;;;;313:57:0;;;;;;;;;;272:493;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c80630a9254e4146100675780633a76846314610071578063ba414fa6146100a9578063bca86986146100c1578063f8ccbf47146100c9578063fa7626d4146100dc575b600080fd5b61006f6100e9565b005b61008c737109709ecfa91a80626ff3989d68f67f5b1dd12d81565b6040516001600160a01b0390911681526020015b60405180910390f35b6100b16101e3565b60405190151581526020016100a0565b61006f61030e565b6000546100b19062010000900460ff1681565b6000546100b19060ff1681565b6008546040805163e0bdf58360e01b8152600481019190915260096044820152687372632f746573742f60b81b60648201526080602482015260056084820152642a37b5b2b760d91b60a48201526001600160a01b039091169063e0bdf5839060c4016020604051808303816000875af115801561016b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018f91906107fc565b600980546001600160a01b0319166001600160a01b03929092169182179055604080518082019091526013815272030b2323932b9b9903337b9103a37b5b2b71d1606d1b60208201526101e191610455565b565b60008054610100900460ff16156102035750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156103095760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b82840152825180830384018152606083019093526000929091610291917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49160800161085c565b60408051601f19818403018152908290526102ab9161088d565b6000604051808303816000865af19150503d80600081146102e8576040519150601f19603f3d011682016040523d82523d6000602084013e6102ed565b606091505b509150508080602001905181019061030591906108a9565b9150505b919050565b600954610325906001600160a01b0316600061049e565b600954604080516306fdde0360e01b815290516103c0926001600160a01b0316916306fdde039160048083019260009291908290030181865afa158015610370573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261039891908101906108e1565b6040518060400160405280600a8152602001692a32b9ba102a37b5b2b760b11b8152506105a2565b600954604080516395d89b4160e01b815290516101e1926001600160a01b0316916395d89b419160048083019260009291908290030181865afa15801561040b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261043391908101906108e1565b60405180604001604052806004815260200163151154d560e21b8152506105a2565b61049a828260405160240161046b9291906109ba565b60408051601f198184030181529190526020810180516001600160e01b031663319af33360e01b1790526106cf565b5050565b806001600160a01b0316826001600160a01b03160361049a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516105249060208082526025908201527f4572726f723a206120213d2062206e6f7420736174697366696564205b616464604082015264726573735d60d81b606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f8160405161055b91906109e4565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516105929190610a28565b60405180910390a161049a6106f0565b806040516020016105b3919061088d565b60405160208183030381529060405280519060200120826040516020016105da919061088d565b604051602081830303815290604052805190602001201461049a577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516106619060208082526024908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b737472604082015263696e675d60e01b606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516106989190610a52565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583826040516105929190610a96565b80516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156107eb5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190526519985a5b195960d21b9282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc49060800160408051601f198184030181529082905261078a929160200161085c565b60408051601f19818403018152908290526107a49161088d565b6000604051808303816000865af19150503d80600081146107e1576040519150601f19603f3d011682016040523d82523d6000602084013e6107e6565b606091505b505050505b6000805461ff001916610100179055565b60006020828403121561080e57600080fd5b81516001600160a01b038116811461082557600080fd5b9392505050565b60005b8381101561084757818101518382015260200161082f565b83811115610856576000848401525b50505050565b6001600160e01b031983168152815160009061087f81600485016020870161082c565b919091016004019392505050565b6000825161089f81846020870161082c565b9190910192915050565b6000602082840312156108bb57600080fd5b8151801515811461082557600080fd5b634e487b7160e01b600052604160045260246000fd5b6000602082840312156108f357600080fd5b815167ffffffffffffffff8082111561090b57600080fd5b818401915084601f83011261091f57600080fd5b815181811115610931576109316108cb565b604051601f8201601f19908116603f01168101908382118183101715610959576109596108cb565b8160405282815287602084870101111561097257600080fd5b61098383602083016020880161082c565b979650505050505050565b600081518084526109a681602086016020860161082c565b601f01601f19169290920160200192915050565b6040815260006109cd604083018561098e565b905060018060a01b03831660208301529392505050565b604081526000610a0e60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b6001600160a01b0393909316602092909201919091525090565b604081526000610a0e60408301600a815269080808081058dd1d585b60b21b602082015260400190565b604081526000610a7c60408301600a8152690808115e1c1958dd195960b21b602082015260400190565b8281036020840152610a8e818561098e565b949350505050565b604081526000610a7c60408301600a815269080808081058dd1d585b60b21b60208201526040019056fea26469706673582212202b7eefbea70e5ebcbb973238d57a3797a40496671b583122bfa1dbfbbf4279c764736f6c634300080f0033",
    "sourceMap": "272:493:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;402:188;;;:::i;:::-;;316:38:4;;245:64;316:38;;;;;-1:-1:-1;;;;;189:32:10;;;171:51;;159:2;144:18;316:38:4;;;;;;;;1819:584:3;;;:::i;:::-;;;398:14:10;;391:22;373:41;;361:2;346:18;1819:584:3;233:187:10;596:167:0;;;:::i;165:28:4:-;;;;;;;;;;;;1572:26:3;;;;;;;;;402:188:0;463:13;;:50;;;-1:-1:-1;;;463:50:0;;;;;710:21:10;;;;767:1;747:18;;;740:29;-1:-1:-1;;;785:18:10;;;778:39;855:3;833:20;;;826:33;896:1;875:19;;;868:30;-1:-1:-1;;;914:19:10;;;907:36;-1:-1:-1;;;;;463:13:0;;;;:28;;960:19:10;;463:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;436:5;:87;;-1:-1:-1;;;;;;436:87:0;-1:-1:-1;;;;;436:87:0;;;;;;;;;533:50;;;;;;;;;;;;-1:-1:-1;;;533:50:0;;;;;;:11;:50::i;:::-;402:188::o;1819:584:3:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:3;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;1459:51:10;;;-1:-1:-1;;;1526:18:10;;;1519:34;2196:43:3;;;;;;;;;1432:18:10;;;2196:43:3;;;-1:-1:-1;;1671:64:3;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;-1:-1:-1;;2086:175:3;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:3:o;596:167:0:-;651:5;;633:37;;-1:-1:-1;;;;;651:5:0;;633:9;:37::i;:::-;688:5;;:12;;;-1:-1:-1;;;688:12:0;;;;679:36;;-1:-1:-1;;;;;688:5:0;;:10;;:12;;;;;:5;;:12;;;;;;;:5;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;688:12:0;;;;;;;;;;;;:::i;:::-;679:36;;;;;;;;;;;;;-1:-1:-1;;;679:36:0;;;:8;:36::i;:::-;733:5;;:14;;;-1:-1:-1;;;733:14:0;;;;724:32;;-1:-1:-1;;;;;733:5:0;;:12;;:14;;;;;:5;;:14;;;;;;;:5;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;733:14:0;;;;;;;;;;;;:::i;:::-;724:32;;;;;;;;;;;;;-1:-1:-1;;;724:32:0;;;:8;:32::i;6994:145:7:-;7061:71;7124:2;7128;7077:54;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;7077:54:7;;;;;;;;;;;;;;-1:-1:-1;;;;;7077:54:7;-1:-1:-1;;;7077:54:7;;;7061:15;:71::i;:::-;6994:145;;:::o;174:278:2:-;243:1;-1:-1:-1;;;;;238:6:2;:1;-1:-1:-1;;;;;238:6:2;;234:212;;265:44;;;;;4572:2:10;4554:21;;;4611:2;4591:18;;;4584:30;4650:34;4645:2;4630:18;;4623:62;-1:-1:-1;;;4716:2:10;4701:18;;4694:35;4761:3;4746:19;;4370:401;265:44:2;;;;;;;;328:34;360:1;328:34;;;;;;:::i;:::-;;;;;;;;381;413:1;381:34;;;;;;:::i;:::-;;;;;;;;429:6;:4;:6::i;14688:344:3:-;14824:1;14807:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14797:30;;;;;;14790:1;14773:19;;;;;;;;:::i;:::-;;;;;;;;;;;;;14763:30;;;;;;:64;14759:267;;14848:43;;;;;6345:2:10;6327:21;;;6384:2;6364:18;;;6357:30;6423:34;6418:2;6403:18;;6396:62;-1:-1:-1;;;6489:2:10;6474:18;;6467:34;6533:3;6518:19;;6143:400;14848:43:3;;;;;;;;14910:33;14941:1;14910:33;;;;;;:::i;:::-;;;;;;;;14962;14993:1;14962:33;;;;;;:::i;181:376:7:-;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;2410:424:3:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;7640:51:10;;;-1:-1:-1;;;7707:18:10;;;7700:34;;;;2705:4:3;7750:18:10;;;7743:34;2482:11:3;;1671:64;2579:43;;7613:18:10;;2645:67:3;;;-1:-1:-1;;2645:67:3;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:3;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:3;2813:7;:14;;-1:-1:-1;;2813:14:3;;;;;2410:424::o;990:290:10:-;1060:6;1113:2;1101:9;1092:7;1088:23;1084:32;1081:52;;;1129:1;1126;1119:12;1081:52;1155:16;;-1:-1:-1;;;;;1200:31:10;;1190:42;;1180:70;;1246:1;1243;1236:12;1180:70;1269:5;990:290;-1:-1:-1;;;990:290:10:o;1564:258::-;1636:1;1646:113;1660:6;1657:1;1654:13;1646:113;;;1736:11;;;1730:18;1717:11;;;1710:39;1682:2;1675:10;1646:113;;;1777:6;1774:1;1771:13;1768:48;;;1812:1;1803:6;1798:3;1794:16;1787:27;1768:48;;1564:258;;;:::o;1827:371::-;-1:-1:-1;;;;;;2012:33:10;;2000:46;;2069:13;;1982:3;;2091:61;2069:13;2141:1;2132:11;;2125:4;2113:17;;2091:61;:::i;:::-;2172:16;;;;2190:1;2168:24;;1827:371;-1:-1:-1;;;1827:371:10:o;2203:274::-;2332:3;2370:6;2364:13;2386:53;2432:6;2427:3;2420:4;2412:6;2408:17;2386:53;:::i;:::-;2455:16;;;;;2203:274;-1:-1:-1;;2203:274:10:o;2482:277::-;2549:6;2602:2;2590:9;2581:7;2577:23;2573:32;2570:52;;;2618:1;2615;2608:12;2570:52;2650:9;2644:16;2703:5;2696:13;2689:21;2682:5;2679:32;2669:60;;2725:1;2722;2715:12;2764:127;2825:10;2820:3;2816:20;2813:1;2806:31;2856:4;2853:1;2846:15;2880:4;2877:1;2870:15;2896:884;2976:6;3029:2;3017:9;3008:7;3004:23;3000:32;2997:52;;;3045:1;3042;3035:12;2997:52;3078:9;3072:16;3107:18;3148:2;3140:6;3137:14;3134:34;;;3164:1;3161;3154:12;3134:34;3202:6;3191:9;3187:22;3177:32;;3247:7;3240:4;3236:2;3232:13;3228:27;3218:55;;3269:1;3266;3259:12;3218:55;3298:2;3292:9;3320:2;3316;3313:10;3310:36;;;3326:18;;:::i;:::-;3401:2;3395:9;3369:2;3455:13;;-1:-1:-1;;3451:22:10;;;3475:2;3447:31;3443:40;3431:53;;;3499:18;;;3519:22;;;3496:46;3493:72;;;3545:18;;:::i;:::-;3585:10;3581:2;3574:22;3620:2;3612:6;3605:18;3660:7;3655:2;3650;3646;3642:11;3638:20;3635:33;3632:53;;;3681:1;3678;3671:12;3632:53;3694:55;3746:2;3741;3733:6;3729:15;3724:2;3720;3716:11;3694:55;:::i;:::-;3768:6;2896:884;-1:-1:-1;;;;;;;2896:884:10:o;3785:258::-;3827:3;3865:5;3859:12;3892:6;3887:3;3880:19;3908:63;3964:6;3957:4;3952:3;3948:14;3941:4;3934:5;3930:16;3908:63;:::i;:::-;4025:2;4004:15;-1:-1:-1;;4000:29:10;3991:39;;;;4032:4;3987:50;;3785:258;-1:-1:-1;;3785:258:10:o;4048:317::-;4225:2;4214:9;4207:21;4188:4;4245:45;4286:2;4275:9;4271:18;4263:6;4245:45;:::i;:::-;4237:53;;4355:1;4351;4346:3;4342:11;4338:19;4330:6;4326:32;4321:2;4310:9;4306:18;4299:60;4048:317;;;;;:::o;4940:374::-;5170:2;5159:9;5152:21;5133:4;5190:49;5235:2;5224:9;5220:18;4853:2;4841:15;;-1:-1:-1;;;4881:4:10;4872:14;;4865:36;4926:2;4917:12;;4776:159;5190:49;-1:-1:-1;;;;;5275:32:10;;;;5270:2;5255:18;;;;5248:60;;;;-1:-1:-1;5182:57:10;4940:374::o;5483:::-;5713:2;5702:9;5695:21;5676:4;5733:49;5778:2;5767:9;5763:18;5396:2;5384:15;;-1:-1:-1;;;5424:4:10;5415:14;;5408:36;5469:2;5460:12;;5319:159;6548:440;6798:2;6787:9;6780:21;6761:4;6824:49;6869:2;6858:9;6854:18;4853:2;4841:15;;-1:-1:-1;;;4881:4:10;4872:14;;4865:36;4926:2;4917:12;;4776:159;6824:49;6921:9;6913:6;6909:22;6904:2;6893:9;6889:18;6882:50;6949:33;6975:6;6967;6949:33;:::i;:::-;6941:41;6548:440;-1:-1:-1;;;;6548:440:10:o;6993:::-;7243:2;7232:9;7225:21;7206:4;7269:49;7314:2;7303:9;7299:18;5396:2;5384:15;;-1:-1:-1;;;5424:4:10;5415:14;;5408:36;5469:2;5460:12;;5319:159",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "IS_TEST()": "fa7626d4",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "testSetup()": "bca86986",
    "vm()": "3a768463"
  },
  "ast": {
    "absolutePath": "foundry_test/Token.t.sol",
    "id": 76,
    "exportedSymbols": {
      "ExtendedTest": [
        318
      ],
      "Token": [
        88
      ],
      "TokenTest": [
        75
      ],
      "VyperDeployer": [
        22048
      ],
      "console": [
        13806
      ]
    },
    "nodeType": "SourceUnit",
    "src": "34:731:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "34:24:0",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "60:54:0",
        "absolutePath": "foundry_test/utils/ExtendedTest.sol",
        "file": "./utils/ExtendedTest.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76,
        "sourceUnit": 319,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ExtendedTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 318,
              "src": "68:12:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "115:61:0",
        "absolutePath": "lib/utils/VyperDeployer.sol",
        "file": "../lib/utils/VyperDeployer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76,
        "sourceUnit": 22049,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "VyperDeployer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22048,
              "src": "123:13:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "178:46:0",
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76,
        "sourceUnit": 13807,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13806,
              "src": "186:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "225:45:0",
        "absolutePath": "foundry_test/interfaces/Token.sol",
        "file": "./interfaces/Token.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 76,
        "sourceUnit": 89,
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "Token",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 88,
              "src": "233:5:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 75,
        "nodeType": "ContractDefinition",
        "src": "272:493:0",
        "nodes": [
          {
            "id": 18,
            "nodeType": "VariableDeclaration",
            "src": "313:57:0",
            "constant": false,
            "mutability": "mutable",
            "name": "vyperDeployer",
            "nameLocation": "335:13:0",
            "scope": 75,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VyperDeployer_$22048",
              "typeString": "contract VyperDeployer"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "VyperDeployer",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22048,
                "src": "313:13:0"
              },
              "referencedDeclaration": 22048,
              "src": "313:13:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VyperDeployer_$22048",
                "typeString": "contract VyperDeployer"
              }
            },
            "value": {
              "arguments": [],
              "expression": {
                "argumentTypes": [],
                "id": 16,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "nodeType": "NewExpression",
                "src": "351:17:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_VyperDeployer_$22048_$",
                  "typeString": "function () returns (contract VyperDeployer)"
                },
                "typeName": {
                  "id": 15,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 14,
                    "name": "VyperDeployer",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 22048,
                    "src": "355:13:0"
                  },
                  "referencedDeclaration": 22048,
                  "src": "355:13:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_VyperDeployer_$22048",
                    "typeString": "contract VyperDeployer"
                  }
                }
              },
              "id": 17,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "351:19:0",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VyperDeployer_$22048",
                "typeString": "contract VyperDeployer"
              }
            },
            "visibility": "private"
          },
          {
            "id": 21,
            "nodeType": "VariableDeclaration",
            "src": "376:19:0",
            "constant": false,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "390:5:0",
            "scope": 75,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Token_$88",
              "typeString": "contract Token"
            },
            "typeName": {
              "id": 20,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 19,
                "name": "Token",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 88,
                "src": "376:5:0"
              },
              "referencedDeclaration": 88,
              "src": "376:5:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Token_$88",
                "typeString": "contract Token"
              }
            },
            "visibility": "private"
          },
          {
            "id": 45,
            "nodeType": "FunctionDefinition",
            "src": "402:188:0",
            "body": {
              "id": 44,
              "nodeType": "Block",
              "src": "426:164:0",
              "statements": [
                {
                  "expression": {
                    "id": 32,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 24,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "436:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$88",
                        "typeString": "contract Token"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "7372632f746573742f",
                              "id": 28,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "492:11:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5445cb9c00d00f1d9c163bcce9114f4242c32a0c50a0d5544ac5bbbd95cf341",
                                "typeString": "literal_string \"src/test/\""
                              },
                              "value": "src/test/"
                            },
                            {
                              "hexValue": "546f6b656e",
                              "id": 29,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "505:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                                "typeString": "literal_string \"Token\""
                              },
                              "value": "Token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a5445cb9c00d00f1d9c163bcce9114f4242c32a0c50a0d5544ac5bbbd95cf341",
                                "typeString": "literal_string \"src/test/\""
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1317f51c845ce3bfb7c268e5337a825f12f3d0af9584c2bbfbf4e64e314eaf73",
                                "typeString": "literal_string \"Token\""
                              }
                            ],
                            "expression": {
                              "id": 26,
                              "name": "vyperDeployer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 18,
                              "src": "463:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_VyperDeployer_$22048",
                                "typeString": "contract VyperDeployer"
                              }
                            },
                            "id": 27,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "deployContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 21972,
                            "src": "463:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_address_$",
                              "typeString": "function (string memory,string memory) external returns (address)"
                            }
                          },
                          "id": 30,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "463:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 25,
                        "name": "Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "444:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Token_$88_$",
                          "typeString": "type(contract Token)"
                        }
                      },
                      "id": 31,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "444:79:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Token_$88",
                        "typeString": "contract Token"
                      }
                    },
                    "src": "436:87:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Token_$88",
                      "typeString": "contract Token"
                    }
                  },
                  "id": 33,
                  "nodeType": "ExpressionStatement",
                  "src": "436:87:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "6164647265737320666f7220746f6b656e3a20",
                        "id": 37,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "545:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c38be892ecccf71ba203e85d1aa2e0e8d887e72a97b9626e0628a076b78e97f8",
                          "typeString": "literal_string \"address for token: \""
                        },
                        "value": "address for token: "
                      },
                      {
                        "arguments": [
                          {
                            "id": 40,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "576:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$88",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$88",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "568:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 38,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "568:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "568:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c38be892ecccf71ba203e85d1aa2e0e8d887e72a97b9626e0628a076b78e97f8",
                          "typeString": "literal_string \"address for token: \""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 34,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13806,
                        "src": "533:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$13806_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 36,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6501,
                      "src": "533:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "533:50:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "533:50:0"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "411:5:0",
            "parameters": {
              "id": 22,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "416:2:0"
            },
            "returnParameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "426:0:0"
            },
            "scope": 75,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 74,
            "nodeType": "FunctionDefinition",
            "src": "596:167:0",
            "body": {
              "id": 73,
              "nodeType": "Block",
              "src": "624:139:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 51,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "651:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$88",
                              "typeString": "contract Token"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Token_$88",
                              "typeString": "contract Token"
                            }
                          ],
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "643:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 49,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "643:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "643:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 55,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "667:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 54,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "659:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "659:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 56,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "659:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 48,
                      "name": "assertNeq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 124,
                      "src": "633:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 57,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "633:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 58,
                  "nodeType": "ExpressionStatement",
                  "src": "633:37:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 60,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "688:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$88",
                              "typeString": "contract Token"
                            }
                          },
                          "id": 61,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "name",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 82,
                          "src": "688:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 62,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "688:12:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "5465737420546f6b656e",
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "702:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                          "typeString": "literal_string \"Test Token\""
                        },
                        "value": "Test Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81e8ad438398ab0d4a2a7ecb159490c091bb27c67ace5181f70084e30fadaea2",
                          "typeString": "literal_string \"Test Token\""
                        }
                      ],
                      "id": 59,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3098,
                        3123,
                        3136,
                        3152,
                        3194,
                        3236,
                        3278,
                        3315,
                        3352,
                        3389,
                        639,
                        664,
                        694,
                        719,
                        778,
                        803,
                        833,
                        858,
                        1958,
                        1993
                      ],
                      "referencedDeclaration": 1958,
                      "src": "679:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 64,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "679:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 65,
                  "nodeType": "ExpressionStatement",
                  "src": "679:36:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 67,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "733:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Token_$88",
                              "typeString": "contract Token"
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "symbol",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 87,
                          "src": "733:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                            "typeString": "function () view external returns (string memory)"
                          }
                        },
                        "id": 69,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "733:14:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "54455354",
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "749:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                          "typeString": "literal_string \"TEST\""
                        },
                        "value": "TEST"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                          "typeString": "literal_string \"TEST\""
                        }
                      ],
                      "id": 66,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        3098,
                        3123,
                        3136,
                        3152,
                        3194,
                        3236,
                        3278,
                        3315,
                        3352,
                        3389,
                        639,
                        664,
                        694,
                        719,
                        778,
                        803,
                        833,
                        858,
                        1958,
                        1993
                      ],
                      "referencedDeclaration": 1958,
                      "src": "724:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 71,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "724:32:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 72,
                  "nodeType": "ExpressionStatement",
                  "src": "724:32:0"
                }
              ]
            },
            "functionSelector": "bca86986",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testSetup",
            "nameLocation": "605:9:0",
            "parameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "614:2:0"
            },
            "returnParameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "624:0:0"
            },
            "scope": 75,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ExtendedTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 318,
              "src": "294:12:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "294:12:0"
          }
        ],
        "canonicalName": "TokenTest",
        "contractDependencies": [
          22048
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          75,
          318,
          3774,
          2341,
          2105
        ],
        "name": "TokenTest",
        "nameLocation": "281:9:0",
        "scope": 76,
        "usedErrors": []
      }
    ],
    "license": "WTFPL"
  },
  "id": 0
}